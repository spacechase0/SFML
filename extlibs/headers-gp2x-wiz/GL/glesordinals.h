/*
Copyright (C) 2007-2009 Olli Hinkka

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Modified for use in linux: Pickle

*/

#ifndef __GLESORDINALS_H__
#define __GLESORDINALS_H__

#include <string>

const int ordinals = 175;

std::string GlESOrdinals[ordinals] = {
	"eglChooseConfig",
	"eglCopyBuffers",
	"eglCreateContext",
	"eglCreatePbufferSurface",
	"eglCreatePixmapSurface",
	"eglCreateWindowSurface",
	"eglDestroyContext",
	"eglDestroySurface",
	"eglGetConfigAttrib",
	"eglGetConfigs",
	"eglGetCurrentContext",
	"eglGetCurrentDisplay",
	"eglGetCurrentSurface",
	"eglGetDisplay",
	"eglGetError",
	"eglGetProcAddress",
	"eglInitialize",
	"eglMakeCurrent",
	"eglQueryContext",
	"eglQueryString",
	"eglQuerySurface",
	"eglSwapBuffers",
	"eglTerminate",
	"eglWaitGL",
	"eglWaitNative",
	"glActiveTexture",
	"glAlphaFunc",
	"glAlphaFuncx",
	"glBindTexture",
	"glBlendFunc",
	"glClear",
	"glClearColor",
	"glClearColorx",
	"glClearDepthf",
	"glClearDepthx",
	"glClearStencil",
	"glClientActiveTexture",
	"glColor4f",
	"glColor4x",
	"glColorMask",
	"glColorPointer",
	"glCompressedTexImage2D",
	"glCompressedTexSubImage2D",
	"glCopyTexImage2D",
	"glCopyTexSubImage2D",
	"glCullFace",
	"glDeleteTextures",
	"glDepthFunc",
	"glDepthMask",
	"glDepthRangef",
	"glDepthRangex",
	"glDisable",
	"glDisableClientState",
	"glDrawArrays",
	"glDrawElements",
	"glEnable",
	"glEnableClientState",
	"glFinish",
	"glFlush",
	"glFogf",
	"glFogfv",
	"glFogx",
	"glFogxv",
	"glFrontFace",
	"glFrustumf",
	"glFrustumx",
	"glGenTextures",
	"glGetError",
	"glGetIntegerv",
	"glGetString",
	"glHint",
	"glLightModelf",
	"glLightModelfv",
	"glLightModelx",
	"glLightModelxv",
	"glLightf",
	"glLightfv",
	"glLightx",
	"glLightxv",
	"glLineWidth",
	"glLineWidthx",
	"glLoadIdentity",
	"glLoadMatrixf",
	"glLoadMatrixx",
	"glLogicOp",
	"glMaterialf",
	"glMaterialfv",
	"glMaterialx",
	"glMaterialxv",
	"glMatrixMode",
	"glMultMatrixf",
	"glMultMatrixx",
	"glMultiTexCoord4f",
	"glMultiTexCoord4x",
	"glNormal3f",
	"glNormal3x",
	"glNormalPointer",
	"glOrthof",
	"glOrthox",
	"glPixelStorei",
	"glPointSize",
	"glPointSizex",
	"glPolygonOffset",
	"glPolygonOffsetx",
	"glPopMatrix",
	"glPushMatrix",
	"glQueryMatrixxOES",
	"glReadPixels",
	"glRotatef",
	"glRotatex",
	"glSampleCoverage",
	"glSampleCoveragex",
	"glScalef",
	"glScalex",
	"glScissor",
	"glShadeModel",
	"glStencilFunc",
	"glStencilMask",
	"glStencilOp",
	"glTexCoordPointer",
	"glTexEnvf",
	"glTexEnvfv",
	"glTexEnvx",
	"glTexEnvxv",
	"glTexImage2D",
	"glTexParameterf",
	"glTexParameterx",
	"glTexSubImage2D",
	"glTranslatef",
	"glTranslatex",
	"glVertexPointer",
	"glViewport",
	"eglSwapInterval",
	"glBindBuffer",
	"glBufferData",
	"glBufferSubData",
	"glClipPlanef",
	"glClipPlanex",
	"glColor4ub",
	"glDeleteBuffers",
	"glGenBuffers",
	"glGetBooleanv",
	"glGetBufferParameteriv",
	"glGetClipPlanef",
	"glGetClipPlanex",
	"glGetFixedv",
	"glGetFloatv",
	"glGetLightfv",
	"glGetLightxv",
	"glGetMaterialfv",
	"glGetMaterialxv",
	"glGetPointerv",
	"glGetTexEnvfv",
	"glGetTexEnviv",
	"glGetTexEnvxv",
	"glGetTexParameterfv",
	"glGetTexParameteriv",
	"glGetTexParameterxv",
	"glIsBuffer",
	"glIsEnabled",
	"glIsTexture",
	"glPointParameterf",
	"glPointParameterfv",
	"glPointParameterx",
	"glPointParameterxv",
	"glPointSizePointerOES",
	"glTexEnvi",
	"glTexEnviv",
	"glTexParameterfv",
	"glTexParameteri",
	"glTexParameteriv",
	"glTexParameterxv",
	"eglBindTexImage",
	"eglReleaseTexImage",
	"eglSurfaceAttrib"
};

#endif

